Format to remember:
main() → runApp() → MaterialApp → Scaffold → AppBar + Body → Widgets
🔹 1. main() Function
This is where your app starts running.
void main() => runApp(MyApp());
🔹 2. MyApp Class
This sets up your whole app — usually a StatelessWidget unless you're changing state.
class MyApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
return MaterialApp(
home: Scaffold( // screen structure
appBar: AppBar(title: Text('Title')),
body: WidgetTree(),
),
);
}
}
🔹 3. Scaffold
Gives your app a basic layout — like an app bar, body, floating button, etc.
🔹 4. AppBar
The top bar of the app — use this for the title.
🔹 5. Body
This is where your actual widgets go. You usually use:
● Column() → vertical layout
● Row() → horizontal layout
● Container() → for colors, width, height
● Text(), Image(), Button(), etc.
🧩 Example: Quick Widget Structure
body: Column(
children: [
Container(...), // Red box
SizedBox(height: 10),
Row(
children: [
Container(...), // Blue box
Container(...), // Orange box
],
)
],
)
Summary Formula (Write this in your mind):
main() → runApp() → MyApp → MaterialApp → Scaffold → AppBar + body →
Column/Row → Containers/Text
CREATING SIMPLE WIDGETS
import 'package:flutter/material.dart';
void main() => runApp(MaterialApp(
title: 'Colorful Widgets',
home: Scaffold(
appBar: AppBar(title: Text('Simple Colored Widgets'), backgroundColor: Colors.deepPurple),
body: Center(
child: Column(
mainAxisAlignment: MainAxisAlignment.center,
children: [
coloredBox(Colors.red, 'I am Red box'),
SizedBox(height: 10),
coloredBox(Colors.green, 'I am Green Box'),
SizedBox(height: 10),
Row(
mainAxisAlignment: MainAxisAlignment.center,
children: [
coloredBox(Colors.blue, 'Blue'),
SizedBox(width: 10),
coloredBox(Colors.orange, 'Orange'),
],
),
],
),
),
),
));
Widget coloredBox(Color color, String text) => Container(
width: 120,
height: 80,
color: color,
alignment: Alignment.center,
child: Text(text, style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
);
1. Alarm on and alarm off
import 'package:flutter/material.dart';
void main() => runApp(MyApp());
class MyApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
return MaterialApp(home: AlarmToggle());
}
}
class AlarmToggle extends StatefulWidget {
@override
_AlarmToggleState createState() => _AlarmToggleState();
}
class _AlarmToggleState extends State<AlarmToggle> {
bool isAlarmOn = false;
@override
Widget build(BuildContext context) {
return Scaffold(
body: Center(
child: ElevatedButton(
onPressed: () {
setState(() {
isAlarmOn = !isAlarmOn;
});
},
child: Text(isAlarmOn ? 'Alarm Off' : 'Alarm On'), //button text
), ),); }}
2. Calculator
import 'package:flutter/material.dart';
void main() => runApp(MyApp());
class MyApp extends StatefulWidget {
const MyApp({super.key});
@override
State<MyApp> createState() => _MyAppState();
}
class _MyAppState extends State<MyApp> {
String output = "0";
double num1 = 0, num2 = 0;
String _output = "", operand = "";
final buttons = [
"C", "⌫", "%", "/",
"7","8","9","*",
"4", "5", "6", "-",
"1", "2", "3", "+",
"+/-", "0", ".", "=",
];
void buttonPressed(String text) {
setState(() {
if (text == "=") {
num2 = double.parse(_output);
if (operand == "+") _output = (num1 + num2).toString();
if (operand == "-") _output = (num1 - num2).toString();
if (operand == "*") _output = (num1 * num2).toString();
if (operand == "/") _output = (num1 / num2).toString();
num1 = 0;
num2 = 0;
operand = "";
} else if (text == "C") {
_output = "0";
num1 = 0;
num2 = 0;
operand = "";
} else if (["+", "-", "*", "/"].contains(text)) {
num1 = double.parse(_output);
operand = text;
_output = "0";
} else {
_output = _output == "0" ? text : _output + text;
}
output = _output;
});
}
@override
Widget build(BuildContext context) {
return MaterialApp(
home: Scaffold(
body: Column(
children: [
Text(output),
Expanded(
child: GridView.builder(
gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
crossAxisCount: 4),
itemCount: buttons.length,
itemBuilder: (context, index) {
return ElevatedButton(
onPressed: () => buttonPressed(buttons[index]),
child: Text(buttons[index]),
);
}, ), ), ], ), ), ); }}
3. 2-D game(ball gesture movement)
import 'package:flutter/material.dart';
import 'dart:async';
void main() => runApp(MaterialApp(home: Game()));
class Game extends StatefulWidget {
@override
State<Game> createState() => _GameState();
}
class _GameState extends State<Game> {
double left = 100, top = 100;
double dx = 3, dy = 3;
late Timer timer;
@override
void initState() {
super.initState();
timer = Timer.periodic(Duration(milliseconds: 16), (_) {
setState(() {
left += dx;
top += dy;
if (left <= 0 || left >= MediaQuery.of(context).size.width - 50) dx = -dx;
if (top <= 0 || top >= MediaQuery.of(context).size.height - 50) dy = -dy;
});
});
}
@override
void dispose() {
timer.cancel();
super.dispose();
}
@override
Widget build(BuildContext context) {
return Scaffold(
body: Stack(children: [
Positioned(
left: left,
top: top,
child: Container(
width: 50,
height: 50,
decoration: BoxDecoration(color: Colors.red, shape: BoxShape.circle),
),
)
]),
);
}
}
//ball bounces automatically
4. Movie Rating application similar to IMDB
import 'package:flutter/material.dart';
void main() => runApp(MaterialApp(home: MovieApp()));
class MovieApp extends StatelessWidget {
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(title: Text("Movies")),
body: Padding(
padding: EdgeInsets.all(16),
child: Column(
children: [
Row(
children: [
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 140),
SizedBox(height: 5),
Text("Inception", style: TextStyle(fontSize: 16)),
Row(
children: [
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star_border, color: Colors.amber),
],
),
],
),
SizedBox(width: 20),
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 140),
SizedBox(height: 5),
Text("Interstellar", style: TextStyle(fontSize: 16)),
Row(
children: [
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
],
),
],
),
],
),
SizedBox(height: 20),
Row(
children: [
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 140),
SizedBox(height: 5),
Text("Dark Knight", style: TextStyle(fontSize: 16)),
Row(
children: [
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
],
),
],
),
SizedBox(width: 20),
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 140),
SizedBox(height: 5),
Text("Tenet", style: TextStyle(fontSize: 16)),
Row(
children: [
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star, color: Colors.amber),
Icon(Icons.star_border, color: Colors.amber),
Icon(Icons.star_border, color: Colors.amber),
],
),
],
),
],
),
],
),
),
);
}
}
Add images in flutter:
5. Develop an application to connect to a web service and to retrieve data with HTTP
Add the http package In your pubspec.yaml file:
dependencies:
flutter:
sdk: flutter
http:
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
void main() => runApp(MaterialApp(home: WebApp()));
class WebApp extends StatefulWidget {
@override
State<WebApp> createState() => _WebAppState();
}
class _WebAppState extends State<WebApp> {
String title = "Loading...";
void getData() async {
var res = await http
.get(Uri.parse('https://jsonplaceholder.typicode.com/posts/1'));
setState(() => title = jsonDecode(res.body)['title']);
}
@override
void initState() {
super.initState();
getData();
}
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(title: Text("API Data")),
body: Center(child: Text(title)),
);
}}
6. Develop a simple shopping application
import 'package:flutter/material.dart';
void main() => runApp(MaterialApp(home: ShopApp()));
class ShopApp extends StatefulWidget {
@override
State<ShopApp> createState() => _ShopAppState();
}
class _ShopAppState extends State<ShopApp> {
int total = 0;
void addItem(int price) {
setState(() {
total += price;
});
}
void purchase() {
showDialog(
context: context,
builder: (_) => AlertDialog(
title: Text("Purchase Complete"),
content: Text("Total: ₹$total"),
actions: [
TextButton(
onPressed: () {
Navigator.pop(context);
setState(() => total = 0);
},
child: Text("OK"),
)
],
),
);
}
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(title: Text("Shop")),
body: Column(
children: [
Text("Total: ₹$total", style: TextStyle(fontSize: 20)),
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 100),
Text("Shoes - ₹1500"),
ElevatedButton(
onPressed: () => addItem(1500), child: Text("Add to Cart")),
],
),
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 100),
Text("Watch - ₹2500"),
ElevatedButton(
onPressed: () => addItem(2500), child: Text("Add to Cart")),
],
),
Column(
children: [
Image.asset("assets/image.jpg", width: 100, height: 100),
Text("Headphones - ₹1000"),
ElevatedButton(
onPressed: () => addItem(1000), child: Text("Add to Cart")),
],
),
ElevatedButton(
onPressed: purchase,
child: Text("Purchase"),
),
],
),
);
}
}
8) Design a web server supporting push notifications.
Main.dart
import 'package:flutter/material.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
void main() => runApp(MaterialApp(home: MyHome()));
class MyHome extends StatefulWidget {
@override
State<MyHome> createState() => _MyHomeState();
}
class _MyHomeState extends State<MyHome> {
final _fcm = FirebaseMessaging.instance;
@override
void initState() {
super.initState();
_fcm.getToken().then((token) => print("Token: $token"));
FirebaseMessaging.onMessage.listen((msg) {
showDialog(
context: context,
builder: (_) => AlertDialog(
title: Text(msg.notification?.title ?? "Notification"),
content: Text(msg.notification?.body ?? ""),
),
);
});
}
void sendTestNotification() async {
await http.post(
Uri.parse('http://localhost:3000/send-notification'),
headers: {'Content-Type': 'application/json'},
body: jsonEncode({'message': 'Hello from app', 'deviceToken':
'dummy-token'}),
);
}
@override
Widget build(BuildContext context) => Scaffold(
appBar: AppBar(title: Text("Push Demo")),
body: Center(
child: ElevatedButton(
onPressed: sendTestNotification,
child: Text("Send Test Notification"),
),
),
);
}
server.js
const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const port = 3000;
app.use(bodyParser.json());
app.post('/send-notification', (req, res) => {
const { message, deviceToken } = req.body;
console.log(`Sending: ${message} to ${deviceToken}`);
res.json({ success: true });
});
app.listen(port, () => console.log(`Server at http://localhost:${port}`));
Pubspec.yaml
name: ex8
description: A new Flutter project.
publish_to: 'none'
version: 1.0.0+1
environment:
sdk: ^3.7.0
dependencies:
flutter:
sdk: flutter
firebase_messaging: ^12.0.1
http: ^0.13.3
cupertino_icons: ^1.0.8
flutter:
uses-material-design: true
10) HANGMAN
import 'package:flutter/material.dart';
void main() => runApp(MaterialApp(home: Hangman()));
class Hangman extends StatefulWidget {
@override
_HangmanState createState() => _HangmanState();
}
class _HangmanState extends State<Hangman> {
final word = "NIXON", guessed = <String>{};
@override
Widget build(BuildContext context) {
String display = word.split('').map((c) => guessed.contains(c) ? c : "_").join('
');
return Scaffold(
appBar: AppBar(title: Text("Hangman")),
body: Column(
mainAxisAlignment: MainAxisAlignment.center,
children: [
Text(display, style: TextStyle(fontSize: 30, letterSpacing: 2)),
Wrap(
children: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map((letter) {
return Padding(
padding: EdgeInsets.all(2),
child: ElevatedButton(
onPressed: guessed.contains(letter)
? null
: () => setState(() => guessed.add(letter)),
child: Text(letter),
),
);
}).toList(),
),
],
),
);
}
}
9) GOOGLE MAP
import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:latlong2/latlong.dart';
void main() => runApp(MaterialApp(home: MapPage()));
class MapPage extends StatelessWidget {
@override
Widget build(BuildContext context) {
return Scaffold(
appBar: AppBar(title: Text('Simple Map')),
body: FlutterMap(
options: MapOptions(center: LatLng(13.0827, 80.2707), zoom: 13),
children: [
TileLayer(
urlTemplate: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
subdomains: ['a', 'b', 'c'],
),
],
),
);
}
}
name: untitled
description: A new Flutter project.
publish_to: 'none'
environment:
sdk: '>=3.7.0 <4.0.0'
dependencies:
Flutter:
sdk: flutter
flutter_map: ^6.1.0
latlong2: ^0.9.0
flutter:
uses-material-design: true